slice_max(order_by = -residual, n = 10)
training_data %>%
select(residual, Exited, Total_Trans_Amt, Total_Trans_Ct, Education_Level) %>%
slice_max(order_by = -residual, n = 15)
training_data %>%
select(residual, Exited, Total_Trans_Amt, Total_Trans_Ct, Education_Level) %>%
slice_max(order_by = -residual, n = 10)
min(data$Total_Trans_Amt)
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message = FALSE)
data %>%
ggplot(aes(x = Total_Trans_Ct)) +
geom_histogram() +
facet_wrap(~ Income_Category, ncol = 1) +
labs(x = "Total Transaction Count")
data %>%
ggplot(aes(x = Total_Trans_Ct)) +
geom_histogram() +
facet_wrap(~ Exited, nrow = 2) +
labs(x = "Total Transaction Count",
title = "Distribution of Total Transaction Count by Exit Status (1 means Exited)")
data %>%
ggplot(aes(x = as.factor(Total_Relationship_Count),
y = Total_Trans_Ct)) +
geom_bar(stat = "summary",
fun = mean,
fill = "dodgerblue") +
labs(x = "Total Number of Products the Customer Has",
y= "Average Total Transaction Count")
data %>%
filter(id == 9784 | id == 10098)
data %>%
filter(id == 9784 | id == 10098) %>%
select(Customer_Age, Education_Level, Income_Category, Credit_Limit, Total_Trans_Amt, Total_Trans_Ct, Exited)
descriptive_stats %>%
filter(Variable == "Total_Trans_Amt")
descriptive_stats %>%
filter(Variable == "Total_Trans_Amt" | Variable == "Total_Trans_Count")
descriptive_stats %>%
filter(Variable == "Total_Trans_Amt" | Variable == "Total_Trans_Ct")
training_data %>%
ggplot(aes(x = Total_Trans_Amt, y = Total_Trans_Ct)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm")
training_data %>%
ggplot(aes(x = Total_Trans_Amt, y = Total_Trans_Ct)) +
geom_point(alpha = 0.3, color = "dodgerblue") +
geom_smooth(method = "lm", color = "red") +
labs(x = "Total Transaction Amount",
y = "Total Transaction Count")
training_data %>%
ggplot(aes(x = Total_Trans_Amt^0.5, y = Total_Trans_Ct^2)) +
geom_point(alpha = 0.3, color = "dodgerblue") +
labs(x = "Square Root Total Transaction Amount",
y = "Total Transaction Count Squared") +
geom_smooth(method = "lm", color = "red")
training_data %>%
ggplot(aes(x = sqrt(Total_Trans_Amt), y = sqrt(Total_Trans_Ct))) +
geom_point(alpha = 0.3, color = "dodgerblue") +
labs(x = "Square Root Total Transaction Amount",
y = "Square Root Total Transaction Count") +
geom_smooth(method = "lm", color = "red")
training_data %>%
ggplot(aes(x = sqrt(Total_Trans_Amt), y = Total_Trans_Ct^0.8)) +
geom_point(alpha = 0.3, color = "dodgerblue") +
labs(x = "Square Root Total Transaction Amount",
y = "Total Transaction Count to the Power of 0.8") +
geom_smooth(method = "lm", color = "red")
training_data %>%
ggplot(aes(x = Total_Trans_Amt^0.1, y = Total_Trans_Ct^0.8)) +
geom_point(alpha = 0.3, color = "dodgerblue") +
labs(x = "Total Transaction Amount to the Power of 0.1",
y = "Total Transaction Count to the Power of 0.8") +
geom_smooth(method = "lm", color = "red")
data %>%
filter(id == 9784 | id == 10098) %>%
select(Customer_Age, Education_Level, Income_Category, Credit_Limit, Total_Trans_Amt, Total_Trans_Ct, Exited)
View(data)
data %>%
filter(id == 9784 | id == 10098) %>%
select(Customer_Age, Education_Level, Income_Category, Credit_Limit, Total_Trans_Amt, Total_Trans_Ct, Exited)
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message = FALSE)
data[c(9784, 10098)]
data[c(9784, 10098):,]%>%
data[c(9784, 10098):,]
data[c(9784, 10098):,]
data[c(9784, 10098),]%>%
select(Customer_Age, Education_Level, Income_Category, Credit_Limit, Total_Trans_Amt, Total_Trans_Ct, Exited)
data[c(9784, 10098),:]%>%
data[c(9784, 10098),1]
data[9784, 1]
data %>%
filter(id == 9784) %>%
select(Customer_Age, Education_Level, Income_Category, Credit_Limit, Total_Trans_Amt, Total_Trans_Ct, Exited)
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message = FALSE)
library(tidyverse)
library(here)
library(vtable)
library(reshape2)
data <- read_csv(here("BankChurners.csv", "BankChurners.csv"))
data <- data %>%
mutate(Exited = case_when(Attrition_Flag == "Existing Customer" ~ 0,
Attrition_Flag == "Attrited Customer" ~ 1),
male = case_when(Gender == "M" ~ 1,
Gender == "F" ~ 0),
) %>%
select(-Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1,
-Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2,
-Gender,
-Attrition_Flag,
-CLIENTNUM)
descriptive_stats <- data %>%
select_if(is.numeric) %>%
st(out = "return")
descriptive_stats
data %>%
select_if(is.numeric) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(Var1, Var2, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1.1, size = 8, hjust = 1.1),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
coord_fixed() +
labs(title = "Correlation Matrix of All Numeric Variables")
cor <- cor(data$Avg_Open_To_Buy, data$Credit_Limit)
cat("Correlation between Avg_Open_To_Buy and Credit_Limit:", cor)
data <- data %>%
select(-Avg_Open_To_Buy)
cor_matrix <- cor(data %>%
select_if(is.numeric)) %>%
round(2)
cor_matrix %>%
as.data.frame() %>%
select(Total_Trans_Ct) %>%
arrange(Total_Trans_Ct)
data %>%
ggplot(aes(x = Total_Trans_Ct)) +
geom_histogram(fill = "dodgerblue") +
labs(x= "Total Transaction Count",
title = "Distribution of Total Transaction Count")
data %>%
ggplot(aes(x = Total_Trans_Ct)) +
geom_histogram() +
facet_wrap(~ Income_Category, ncol = 1) +
labs(x = "Total Transaction Count")
data %>%
ggplot(aes(x = Total_Trans_Ct)) +
geom_histogram() +
facet_wrap(~ Exited, nrow = 2) +
labs(x = "Total Transaction Count",
title = "Distribution of Total Transaction Count by Exit Status (1 means Exited)")
data %>%
ggplot(aes(x = as.factor(Total_Relationship_Count),
y = Total_Trans_Ct)) +
geom_bar(stat = "summary",
fun = mean,
fill = "dodgerblue") +
labs(x = "Total Number of Products the Customer Has",
y= "Average Total Transaction Count")
data %>%
ggplot(aes(x = Total_Trans_Amt, y = Total_Trans_Ct, color = as.factor(Exited))) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", formula = y ~ poly(x, 3), se = FALSE) +
labs(x = "Total Transaction Amount",
y = "Total Transaction Count",
color = "Exit Status",
title = "Third Degree Polynomial Smoother for Customers who did and did not Exit") +
scale_color_manual(labels = c("Did not Exit", "Exited"), values = c("dodgerblue", "orange"))
data %>%
filter(id == 9784) %>%
select(Customer_Age, Education_Level, Income_Category, Credit_Limit, Total_Trans_Amt, Total_Trans_Ct, Exited)
data %>%
filter(id = 9784) %>%
select(Customer_Age, Education_Level, Income_Category, Credit_Limit, Total_Trans_Amt, Total_Trans_Ct, Exited)
data %>%
filter(id == 9784) %>%
select(Customer_Age, Education_Level, Income_Category, Credit_Limit, Total_Trans_Amt, Total_Trans_Ct, Exited)
data %>%
dplyr::filter(id == 9784) %>%
select(Customer_Age, Education_Level, Income_Category, Credit_Limit, Total_Trans_Amt, Total_Trans_Ct, Exited)
data %>%
dplyr::filter(id == 9784, class = "subcompact") %>%
select(Customer_Age, Education_Level, Income_Category, Credit_Limit, Total_Trans_Amt, Total_Trans_Ct, Exited)
data %>%
dplyr::filter(id == 9784, class == "subcompact") %>%
select(Customer_Age, Education_Level, Income_Category, Credit_Limit, Total_Trans_Amt, Total_Trans_Ct, Exited)
data %>%
dplyr::filter(`id` == 9784) %>%
select(Customer_Age, Education_Level, Income_Category, Credit_Limit, Total_Trans_Amt, Total_Trans_Ct, Exited)
training_data %>%
ggplot(aes(x = predictions, y = residual)) +
geom_point(color = "dodgerblue", alpha = 0.3) +
labs(x = "Predicted")
descriptive_stats %>%
filter(Variable == "Total_Trans_Amt" | Variable == "Total_Trans_Ct")
hrer
here()
noquote(here())
noquote(here("SL2.jpg"))
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message = FALSE)
library(tidyverse)
library(here)
library(vtable)
library(reshape2)
data <- read_csv(here("BankChurners.csv", "BankChurners.csv"))
data <- data %>%
mutate(Exited = case_when(Attrition_Flag == "Existing Customer" ~ 0,
Attrition_Flag == "Attrited Customer" ~ 1),
male = case_when(Gender == "M" ~ 1,
Gender == "F" ~ 0),
) %>%
select(-Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1,
-Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2,
-Gender,
-Attrition_Flag,
-CLIENTNUM)
descriptive_stats <- data %>%
select_if(is.numeric) %>%
st(out = "return")
descriptive_stats
data %>%
select_if(is.numeric) %>%
cor() %>%
round(2) %>%
melt() %>%
ggplot(aes(Var1, Var2, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1.1, size = 8, hjust = 1.1),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
coord_fixed() +
labs(title = "Correlation Matrix of All Numeric Variables")
cor <- cor(data$Avg_Open_To_Buy, data$Credit_Limit)
cat("Correlation between Avg_Open_To_Buy and Credit_Limit:", cor)
data <- data %>%
select(-Avg_Open_To_Buy)
cor_matrix <- cor(data %>%
select_if(is.numeric)) %>%
round(2)
cor_matrix %>%
as.data.frame() %>%
select(Total_Trans_Ct) %>%
arrange(Total_Trans_Ct)
data %>%
ggplot(aes(x = Total_Trans_Ct)) +
geom_histogram(fill = "dodgerblue") +
labs(x= "Total Transaction Count",
title = "Distribution of Total Transaction Count")
data %>%
ggplot(aes(x = Total_Trans_Ct)) +
geom_histogram() +
facet_wrap(~ Income_Category, ncol = 1) +
labs(x = "Total Transaction Count")
data %>%
ggplot(aes(x = Total_Trans_Ct)) +
geom_histogram() +
facet_wrap(~ Exited, nrow = 2) +
labs(x = "Total Transaction Count",
title = "Distribution of Total Transaction Count by Exit Status (1 means Exited)")
data %>%
ggplot(aes(x = as.factor(Total_Relationship_Count),
y = Total_Trans_Ct)) +
geom_bar(stat = "summary",
fun = mean,
fill = "dodgerblue") +
labs(x = "Total Number of Products the Customer Has",
y= "Average Total Transaction Count")
data %>%
ggplot(aes(x = Total_Trans_Amt, y = Total_Trans_Ct, color = as.factor(Exited))) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", formula = y ~ poly(x, 3), se = FALSE) +
labs(x = "Total Transaction Amount",
y = "Total Transaction Count",
color = "Exit Status",
title = "Third Degree Polynomial Smoother for Customers who did and did not Exit") +
scale_color_manual(labels = c("Did not Exit", "Exited"), values = c("dodgerblue", "orange"))
descriptive_stats %>%
filter(Variable == "Total_Trans_Amt" | Variable == "Total_Trans_Ct")
set.seed(9)
data$id <- 1:nrow(data)
training_data <- data %>%
sample_frac(0.7)
test_data <- data %>%
anti_join(training_data, by = 'id')
training_data %>%
ggplot(aes(x = Total_Trans_Amt, y = Total_Trans_Ct)) +
geom_point(alpha = 0.3, color = "dodgerblue") +
geom_smooth(method = "lm", color = "red") +
labs(x = "Total Transaction Amount",
y = "Total Transaction Count")
training_data %>%
ggplot(aes(x = Total_Trans_Amt^0.5, y = Total_Trans_Ct^2)) +
geom_point(alpha = 0.3, color = "dodgerblue") +
labs(x = "Square Root Total Transaction Amount",
y = "Total Transaction Count Squared") +
geom_smooth(method = "lm", color = "red")
training_data %>%
ggplot(aes(x = sqrt(Total_Trans_Amt), y = sqrt(Total_Trans_Ct))) +
geom_point(alpha = 0.3, color = "dodgerblue") +
labs(x = "Square Root Total Transaction Amount",
y = "Square Root Total Transaction Count") +
geom_smooth(method = "lm", color = "red")
training_data %>%
ggplot(aes(x = sqrt(Total_Trans_Amt), y = Total_Trans_Ct^0.8)) +
geom_point(alpha = 0.3, color = "dodgerblue") +
labs(x = "Square Root Total Transaction Amount",
y = "Total Transaction Count to the Power of 0.8") +
geom_smooth(method = "lm", color = "red")
training_data %>%
ggplot(aes(x = Total_Trans_Amt^0.1, y = Total_Trans_Ct^0.8)) +
geom_point(alpha = 0.3, color = "dodgerblue") +
labs(x = "Total Transaction Amount to the Power of 0.1",
y = "Total Transaction Count to the Power of 0.8") +
geom_smooth(method = "lm", color = "red")
model <- lm(I(Total_Trans_Ct^0.8) ~ I(Total_Trans_Amt^0.1), data = training_data)
training_data$predictions <- predict(model)
training_data$residual <- training_data$Total_Trans_Ct^0.8 - training_data$predictions
training_data %>%
ggplot(aes(x = predictions, y = residual)) +
geom_point(color = "dodgerblue", alpha = 0.3) +
labs(x = "Predicted")
training_data %>%
ggplot(aes(x = Total_Trans_Amt^-0.2, y = Total_Trans_Ct^0.7)) +
geom_point(alpha = 0.3, color = "dodgerblue") +
labs(x = "Total Transaction Amount to the Power of -0.2",
y = "Total Transaction Count to the Power of 0.7") +
geom_smooth(method = "lm", color = "red")
model <- lm(I(Total_Trans_Ct^0.7) ~ I(Total_Trans_Amt^-0.2), data = training_data)
training_data$predictions <- predict(model)
training_data$residual <- training_data$Total_Trans_Ct^0.7 - training_data$predictions
training_data %>%
ggplot(aes(x = predictions, y = residual)) +
geom_point(color = "dodgerblue", alpha = 0.3) +
labs(x = "Residual by Predicted Plot")
training_data %>%
select(residual, Exited, Total_Trans_Amt, Total_Trans_Ct, Education_Level) %>%
slice_max(order_by = -residual, n = 10)
training_data %>%
select(residual, Exited, Total_Trans_Amt, Total_Trans_Ct, Education_Level) %>%
slice_max(order_by = residual, n = 5)
descriptive_stats %>%
filter(Variable == "Total_Trans_Amt" | Variable == "Total_Trans_Ct")
training_data %>%
filter(id == 244) %>%
select(residual, Exited, Total_Trans_Amt, Total_Trans_Ct, Education_Level)
training_data %>%
ggplot(aes(x = Total_Trans_Amt^-0.2, y = Total_Trans_Ct^0.7)) +
geom_point(alpha = 0.3, color = "dodgerblue") +
labs(x = "Total Transaction Amount to the Power of -0.2",
y = "Total Transaction Count to the Power of 0.7") +
geom_smooth(method = "lm", color = "red")
summary(model)
new_data <- data.frame(Total_Trans_Amt = 6000)
predict(model, newdata = new_data, interval = 'confidence', level =0.95)
predict(model, newdata = new_data, interval = 'prediction', level =0.95)
test_data$predictions <- predict(model, newdata = test_data)
test_data$Ytrans <- test_data$Total_Trans_Ct^0.7
cat("Correlation between testing data predictions and actual values", cor(test_data$predictions, test_data$Total_Trans_Ct^0.7))
cor_matrix
training_data %>%
ggplot(aes(x = Exited, y = Total_Trans_Ct, color = Exited)) +
geom_boxplot()
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, color = Exited)) +
geom_boxplot()
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = Exited)) +
geom_boxplot()
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = Exited)) +
geom_boxplot() +
geom_jitter()
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = Exited)) +
geom_boxplot() +
geom_jitter(alpha = 0.1)
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = Exited)) +
geom_boxplot()
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = Exited)) +
geom_boxplot() +
scale_fill_manual(values = c("dodgerblue", "red"))
training_data %>%
ggplot(aes(x = Exited, y = Total_Trans_Ct, fill = Exited)) +
geom_boxplot() +
scale_fill_manual(values = c("dodgerblue", "red"))
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = Exited)) +
geom_boxplot() +
scale_fill_manual(values = c("dodgerblue", "red"))
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = Exited)) +
geom_boxplot() +
scale_colo_manual(values = c("dodgerblue", "red"))
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = Exited)) +
geom_boxplot() +
scale_color_manual(values = c("dodgerblue", "red"))
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = as.factor(Exited))) +
geom_boxplot() +
scale_color_manual(values = c("dodgerblue", "red"))
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = as.factor(Exited))) +
geom_boxplot() +
scale_fill_manual(values = c("dodgerblue", "red"))
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = as.factor(Exited))) +
geom_boxplot() +
scale_fill_manual(values = c("dodgerblue", "red")) +
scale_x_discrete(labels = c("af", "daf"))
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = as.factor(Exited))) +
geom_boxplot() +
scale_fill_manual(values = c("dodgerblue", "red")) +
scale_x_discrete(labels = c("Did not Exit", "Exited"))
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = as.factor(Exited))) +
geom_boxplot() +
scale_fill_manual(values = c("dodgerblue", "red")) +
scale_x_discrete(labels = c("Did not Exit", "Exited")) +
theme(axis.x.text = element_blank())
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = as.factor(Exited))) +
geom_boxplot() +
scale_fill_manual(values = c("dodgerblue", "red")) +
scale_x_discrete(labels = c("Did not Exit", "Exited")) +
theme(axis.title.x =  = element_blank())
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = as.factor(Exited))) +
geom_boxplot() +
scale_fill_manual(values = c("dodgerblue", "red")) +
scale_x_discrete(labels = c("Did not Exit", "Exited")) +
theme(axis.title.x =  element_blank())
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = as.factor(Exited))) +
geom_boxplot() +
scale_fill_manual(values = c("dodgerblue", "red")) +
scale_x_discrete(labels = c("Did not Exit", "Exited")) +
theme(axis.title.x = element_blank(),
legend.title = element_blank()) +
labs(y = "Total Transaction Count")
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = as.factor(Exited))) +
geom_boxplot() +
scale_fill_manual(values = c("dodgerblue", "red")) +
scale_x_discrete(labels = c("Did not Exit", "Exited")) +
theme(axis.title.x = element_blank(),
legend.title = element_blank(),
legend.key = element_blank()) +
labs(y = "Total Transaction Count")
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Ct, fill = as.factor(Exited))) +
geom_boxplot() +
scale_fill_manual(values = c("dodgerblue", "red")) +
scale_x_discrete(labels = c("Did not Exit", "Exited")) +
theme(axis.title.x = element_blank(),
legend.position = "none") +
labs(y = "Total Transaction Count")
cor_matrix
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Amt, fill = as.factor(Exited))) +
geom_boxplot() +
scale_fill_manual(values = c("dodgerblue", "red")) +
scale_x_discrete(labels = c("Did not Exit", "Exited")) +
theme(axis.title.x = element_blank(),
legend.position = "none") +
labs(y = "Total Transaction Count")
training_data %>%
ggplot(aes(x = as.factor(Exited), y = Total_Trans_Amt, fill = as.factor(Exited))) +
geom_boxplot() +
scale_fill_manual(values = c("dodgerblue", "red")) +
scale_x_discrete(labels = c("Did not Exit", "Exited")) +
theme(axis.title.x = element_blank(),
legend.position = "none") +
labs(y = "Total Transaction Amount ($)")
cor_matrix
training2 <- training_data %>%
mutate(high_educ = case_when(Education_Level %in% c("Graduate", "college") ~ 1,
True ~ 0))
training2 <- training_data %>%
mutate(high_educ = case_when(Education_Level %in% c("Graduate", "college") ~ 1,
TRUE ~ 0))
View(training2)
training_data$Education_Level %>%
unique()
training2 <- training_data %>%
mutate(high_educ = case_when(Education_Level %in% c("Graduate", "college", "Post-Graduate", "Doctorate") ~ 1,
TRUE ~ 0))
mosaicplot(training2, color = c("red", "green"), main = "Mosaic Plot",
xlab = "Gender", ylab = "Answer")
conting_table <- xtabs(counts ~ Exit + high_educ)
sadf
